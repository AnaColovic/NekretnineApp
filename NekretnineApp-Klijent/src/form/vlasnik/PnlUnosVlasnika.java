/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.vlasnik;

import kontroler.Kontroler;
import domain.OpstaDomenskaKlasa;
import domain.Vlasnik;
import form.FrmDialog;
import form.FrmForma;
import form.IPanel;
import form.PanelModeEnum;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.basic.BasicInternalFrameTitlePane;

/**
 *
 * @author Administrator
 */
public class PnlUnosVlasnika extends javax.swing.JPanel implements IPanel {

    PanelModeEnum mode;

    /**
     * Creates new form PnlUnosVlasnika
     */
    public PnlUnosVlasnika(PanelModeEnum mode) {
        initComponents();
        this.mode = mode;
        dekorisiPanel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIDVlasnika = new javax.swing.JTextField();
        txtImeVlasnika = new javax.swing.JTextField();
        txtPrezimeVlasnika = new javax.swing.JTextField();
        txtBrojTelefona = new javax.swing.JTextField();
        cmbDatumRodjenja = new datechooser.beans.DateChooserCombo();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        btnUnos = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Unos vlasnika"));

        jLabel1.setText("ID Vlasnika:");

        jLabel2.setText("Ime:");

        jLabel3.setText("Prezime:");

        jLabel4.setText("Datum rodenja:");

        jLabel5.setText("Broj telefona:");

        txtIDVlasnika.setEditable(false);

        cmbDatumRodjenja.setCurrentView(new datechooser.view.appearance.AppearancesList("Light",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));

    btnSacuvaj.setText("Sacuvaj");
    btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSacuvajActionPerformed(evt);
        }
    });

    btnIzmeni.setText("Izmeni");
    btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnIzmeniActionPerformed(evt);
        }
    });

    btnOtkazi.setText("Otkazi");
    btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnOtkaziActionPerformed(evt);
        }
    });

    btnUnos.setText("Novi unos");
    btnUnos.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnUnosActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4))
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtBrojTelefona, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                        .addComponent(txtPrezimeVlasnika, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                        .addComponent(txtImeVlasnika, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                        .addComponent(txtIDVlasnika, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                        .addComponent(cmbDatumRodjenja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addComponent(btnOtkazi)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnIzmeni)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnSacuvaj)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnUnos)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(22, 22, 22)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(txtIDVlasnika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(txtImeVlasnika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(txtPrezimeVlasnika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(cmbDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel4))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(txtBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(42, 42, 42)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnSacuvaj)
                .addComponent(btnIzmeni)
                .addComponent(btnOtkazi)
                .addComponent(btnUnos))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            Vlasnik vlasnik = (Vlasnik) preuzmiPolja();
            if (mode == PanelModeEnum.IZMENA) {
                vlasnik = Kontroler.getInstance().izmenaVlasnika(vlasnik);
                JOptionPane.showMessageDialog(this, "Uspesno ste izmenili vlasnika");
            } else {
                vlasnik = Kontroler.getInstance().unosVlasnika(vlasnik);
                JOptionPane.showMessageDialog(this, "Uspesno ste sacuvali vlasnika");
            }

            popuniPolja(vlasnik);
            postaviVidljivostPoljima(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        SwingUtilities.getWindowAncestor(this).dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnUnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnosActionPerformed
        isprazniPolja();
        postaviVidljivostPoljima(true);
    }//GEN-LAST:event_btnUnosActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        postaviVidljivostPoljima(true);
    }//GEN-LAST:event_btnIzmeniActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JButton btnUnos;
    private datechooser.beans.DateChooserCombo cmbDatumRodjenja;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtBrojTelefona;
    private javax.swing.JTextField txtIDVlasnika;
    private javax.swing.JTextField txtImeVlasnika;
    private javax.swing.JTextField txtPrezimeVlasnika;
    // End of variables declaration//GEN-END:variables

    @Override
    public void popuniPolja(OpstaDomenskaKlasa odk) {
        Vlasnik vlasnik = (Vlasnik) odk;
        txtIDVlasnika.setText(vlasnik.getIdVlasnik() + "");
        txtImeVlasnika.setText(vlasnik.getIme());
        txtPrezimeVlasnika.setText(vlasnik.getPrezime());
        GregorianCalendar gc = new GregorianCalendar();
        gc.setTime(vlasnik.getDatumRodjenja());
        cmbDatumRodjenja.setSelectedDate(gc);
        txtBrojTelefona.setText(vlasnik.getBrTelefona());

        postaviVidljivostPoljima(false);

    }

    @Override
    public OpstaDomenskaKlasa preuzmiPolja() throws Exception {
        Vlasnik vlasnik;
        String ime = txtImeVlasnika.getText().trim();
        String prezime = txtPrezimeVlasnika.getText().trim();
        System.out.println(cmbDatumRodjenja.getSelectedDate().getTime());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date datumRodjenja = java.sql.Date.valueOf(sdf.format(cmbDatumRodjenja.getSelectedDate().getTime()));
        String brojTelefona = txtBrojTelefona.getText().trim();
        if (mode == PanelModeEnum.PRIKAZ) {
            vlasnik = new Vlasnik(new Long(txtIDVlasnika.getText().trim()), ime, prezime, datumRodjenja, brojTelefona);
        } else {
            if (ime.isEmpty() || prezime.isEmpty() || brojTelefona.isEmpty()) {
                throw new Exception("Morate uneti sva polja");
            }
            Calendar c = Calendar.getInstance();
            c.set(c.get(Calendar.YEAR) - 18, c.get(Calendar.MONTH), c.get(Calendar.DAY_OF_MONTH));
            if (datumRodjenja.after(c.getTime())) {
                throw new Exception("Vlasnik mora biti stariji od 18 godina");
            }
            if (mode == PanelModeEnum.UNOS) {
                vlasnik = new Vlasnik(null, ime, prezime, datumRodjenja, brojTelefona);
            } else {
                vlasnik = new Vlasnik(new Long(txtIDVlasnika.getText().trim()), ime, prezime, datumRodjenja, brojTelefona);
            }
        }
        return vlasnik;
    }

    @Override
    public void dekorisiPanel() {
        if (mode == PanelModeEnum.IZMENA) {
            btnUnos.setVisible(false);
            btnIzmeni.setVisible(true);

            setBorder(new TitledBorder("Izmena vlasnika"));
        } else if (mode == PanelModeEnum.UNOS) {
            btnUnos.setVisible(true);
            btnIzmeni.setVisible(false);

            setBorder(new TitledBorder("Unos vlasnika"));
        } else if (mode == PanelModeEnum.PRIKAZ) {
            btnIzmeni.setVisible(false);
            btnOtkazi.setVisible(false);
            btnSacuvaj.setVisible(false);
            btnUnos.setVisible(false);
            setBorder(new TitledBorder("Vlasnik"));
            postaviVidljivostPoljima(false);
        }
    }

    @Override
    public void isprazniPolja() {
        txtBrojTelefona.setText("");
        txtIDVlasnika.setText("");
        txtImeVlasnika.setText("");
        txtPrezimeVlasnika.setText("");
    }

    @Override
    public void postaviVidljivostPoljima(boolean signal) {
        txtImeVlasnika.setEditable(signal);
        txtPrezimeVlasnika.setEditable(signal);
        txtBrojTelefona.setEditable(signal);
        cmbDatumRodjenja.setEnabled(signal);

        btnSacuvaj.setEnabled(signal);
    }

    @Override
    public void popuniPodatke() {
    }

}
