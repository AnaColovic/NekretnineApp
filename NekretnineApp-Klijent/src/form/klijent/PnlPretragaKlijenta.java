/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.klijent;

import kontroler.Kontroler;
import domain.Klijent;
import domain.Nekretnina;
import domain.NekretninaZaIzdavanje;
import domain.OpstaDomenskaKlasa;
import form.FrmDialog;
import form.FrmForma;
import form.IPanel;
import form.PanelModeEnum;
import form.klijent.model.TableModelKlijent;
import form.nekretnina.model.TableModelNekretnina;
import form.ugovorZakup.PnlNoviUgovorOIzdavanjuNekretnine;
import java.awt.Frame;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Administrator
 */
public class PnlPretragaKlijenta extends javax.swing.JPanel implements IPanel {

    PanelModeEnum mode;

    /**
     * Creates new form PnlPretragaKlijenta
     */
    public PnlPretragaKlijenta(PanelModeEnum mode) {
        initComponents();
        this.mode = mode;
        postaviModel();
        dekorisiPanel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKlijent = new javax.swing.JTable();
        btnIzmeni = new javax.swing.JButton();
        btnIzaberi = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        btnPrikaziSve = new javax.swing.JButton();
        btnPrikazi = new javax.swing.JButton();

        jLabel1.setText("Ime:");

        jLabel2.setText("Prezime:");

        txtIme.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtImeKeyReleased(evt);
            }
        });

        txtPrezime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrezimeKeyReleased(evt);
            }
        });

        tblKlijent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblKlijent);

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnIzaberi.setText("Izaberi");
        btnIzaberi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        btnPrikaziSve.setText("Prikazi sve");
        btnPrikaziSve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziSveActionPerformed(evt);
            }
        });

        btnPrikazi.setText("Prikazi");
        btnPrikazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrikazi, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnIzaberi, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPrikaziSve)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrikaziSve))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeni)
                    .addComponent(btnIzaberi)
                    .addComponent(btnOtkazi)
                    .addComponent(btnPrikazi))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        SwingUtilities.getWindowAncestor(this).dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void txtImeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImeKeyReleased
        pronadjiKlijente();
    }//GEN-LAST:event_txtImeKeyReleased

    private void txtPrezimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrezimeKeyReleased
        pronadjiKlijente();
    }//GEN-LAST:event_txtPrezimeKeyReleased

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        Klijent klijent;
        int row = tblKlijent.getSelectedRow();
        TableModelKlijent model = (TableModelKlijent) tblKlijent.getModel();
        if (row != -1) {
            klijent = model.getKlijenti().get(row);
            PnlUnosKlijenta panel = new PnlUnosKlijenta(PanelModeEnum.IZMENA);
            panel.popuniPolja(klijent);
            panel.postaviVidljivostPoljima(false);
            FrmDialog form = new FrmDialog((Frame) SwingUtilities.getWindowAncestor(this), true, panel);
            form.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati klijenta", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnIzaberiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiActionPerformed
        IPanel panel = (IPanel) ((FrmForma) SwingUtilities.getWindowAncestor((FrmDialog) SwingUtilities.getWindowAncestor(this))).getPanel();
        TableModelKlijent model = (TableModelKlijent) tblKlijent.getModel();
        int row = tblKlijent.getSelectedRow();
        if (row != -1) {
            Klijent klijent = model.getKlijenti().get(row);
            panel.popuniPolja((Klijent) klijent);
            SwingUtilities.getWindowAncestor(this).dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati klijenta", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzaberiActionPerformed

    private void btnPrikaziSveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziSveActionPerformed
        isprazniPolja();
        TableModelKlijent model = (TableModelKlijent) tblKlijent.getModel();
        try {
            List<Klijent> klijenti = Kontroler.getInstance().vratiSveKlijente();
            model.setKlijenti(klijenti);
            if (klijenti.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Trenutno u sistemu ne postoji nijedan klijent");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnPrikaziSveActionPerformed

    private void btnPrikaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziActionPerformed
        Klijent klijent;
        int row = tblKlijent.getSelectedRow();
        TableModelKlijent model = (TableModelKlijent) tblKlijent.getModel();
        if (row != -1) {
            klijent = model.getKlijenti().get(row);
            PnlPrikazKlijenta panel = new PnlPrikazKlijenta();
            panel.popuniPolja(klijent);
            FrmForma form = new FrmForma(panel);
            form.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati klijenta", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPrikaziActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzaberi;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnPrikazi;
    private javax.swing.JButton btnPrikaziSve;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKlijent;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private void postaviModel() {
        TableModelKlijent model = new TableModelKlijent(new LinkedList<>());
        tblKlijent.setModel(model);
    }

    private void pronadjiKlijente() {
        TableModelKlijent model = (TableModelKlijent) tblKlijent.getModel();
        try {
            Klijent klijent = (Klijent) preuzmiPolja();
            popuniPolja(klijent);
        } catch (Exception ex) {
            model.setKlijenti(new LinkedList<>());
        }
    }

    @Override
    public void popuniPolja(OpstaDomenskaKlasa odk) {
        TableModelKlijent model = (TableModelKlijent) tblKlijent.getModel();
        try {
            List<Klijent> klijenti = Kontroler.getInstance().pretraziKlijente((Klijent) odk);
            model.setKlijenti(klijenti);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }

    @Override
    public OpstaDomenskaKlasa preuzmiPolja() throws Exception {
        String ime = txtIme.getText().trim();
        String prezime = txtPrezime.getText().trim();
        if (ime.isEmpty() && prezime.isEmpty()) {
            throw new Exception();
        }
        Klijent klijent = new Klijent();
        klijent.setIme(ime);
        klijent.setPrezime(prezime);
        return klijent;
    }

    @Override
    public void isprazniPolja() {
        txtIme.setText("");
        txtPrezime.setText("");
    }

    @Override
    public void dekorisiPanel() {
        if (mode == PanelModeEnum.IZMENA) {
            btnIzaberi.setVisible(false);
            btnPrikazi.setVisible(true);
        } else if(mode == PanelModeEnum.PRETRAGA){
            btnIzmeni.setVisible(false);
            btnPrikazi.setVisible(false);
        }
    }

    @Override
    public void postaviVidljivostPoljima(boolean signal) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void popuniPodatke() {
        postaviModel();
        isprazniPolja();
    }
}
